@mixin transition($property, $time: $trans-time, $ease: ease-in-out)
	transition: $property $time $ease
	will-change: $property

// min, max workarounds for lack of SASS compatibility
@function max($numbers...)
	@return m#{a}x(#{$numbers})
@function min($numbers...)
	@return m#{i}n(#{$numbers})

// text

@mixin light-text
	color: $color-2
@mixin highlight($color: $highlight-color, $width: $unit-6)
	background: linear-gradient(0deg, $color $width, transparent $width)

// box-shadows

@mixin box-shadow
	box-shadow: 1px 3px 8px $shadow, 1px 3px 3px $shadow-2
@mixin box-shadow-filter
	filter: drop-shadow(1px 3px 8px $shadow) drop-shadow(1px 3px 3px $shadow-2)

@mixin box-shadow-small
	box-shadow: 1px 3px 4px $shadow
@mixin box-shadow-small-filter
	filter: drop-shadow(1px 3px 4px $shadow)

@mixin box-shadow-big
	box-shadow: 0 0px 40px $shadow, 0 5px 12px $shadow-2
@mixin box-shadow-big-filter
	filter: drop-shadow(0 0px 40px $shadow) drop-shadow(0 5px 12px $shadow-2)

@mixin box-shadow-down
	box-shadow: 6px 6px 6px $shadow, -6px 6px 6px $shadow-2
@mixin box-shadow-down-filter
	filter: drop-shadow(6px 6px 6px $shadow) drop-shadow(-6px 6px 6px $shadow-2)

// borders

@mixin rounded($radius: $border-radius)
	border-radius: $radius
@mixin rounded-small
	border-radius: $border-radius-small
@mixin rounded-big
	border-radius: $border-radius-big
@mixin rounded-bigger
	border-radius: $border-radius-bigger
@mixin border-inline($color: $border-color, $width: $border-width)
	box-shadow: 0 0 0 $width $color
@mixin border-outline($color: $border-color)
	outline: $border-width solid $color

// hover

@mixin hover-opacity
	@include transition(opacity, $trans-time, ease)
	&:hover
		opacity: $hover-opacity
@mixin hover-scale($amount: $scale-down, $start: 1)
	transform: scale($start)
	@include transition(transform, $trans-time, ease)
	&:hover
		transform: scale($amount)
@mixin hover-scale-opacity($amount: $scale-down, $start: 1)
	transform: scale($start)
	transition: transform $trans-time ease, opacity $trans-time ease
	will-change: transform, opacity
	&:hover
		opacity: $hover-opacity
		transform: scale($amount)

// positioning

@mixin overlay
	&::after
		content: ''
		position: absolute
		width: 100%
		height: 100%
		left: 0
		top: 0
@mixin position-absolute
	position: absolute
	height: 100%
	width: 100%
	top: 0
	left: 0

// backgrounds

@mixin background-image($src)
	background: url($src)
	background-size: cover
	background-position: center center
@mixin gradient-bg($color)
	background: linear-gradient($color, darken( $color, 15% ))
@mixin gradient-bg-opposite($color)
	background: linear-gradient(darken( $color, 15% ), $color)

// paddings

@mixin space($this-space: $space)
	> *:not(:last-child)
		margin-bottom: $this-space
		&.no-margin
			margin-bottom: 0
	> .space-before:not(:first-child)
		margin-top: scaleUnit($this-space, 2)
	> .space-after:not(:last-child)
		margin-bottom: scaleUnit($this-space, 2)
	> .space-before-big:not(:first-child)
		margin-top: scaleUnit($this-space, 4)
	> .space-after-big:not(:last-child)
		margin-bottom: scaleUnit($this-space, 4)
@mixin spaceHorz($this-space: $space)
	> *:not(:last-child)
		margin-right: $this-space
		&.no-margin
			margin-right: 0
	> .space-before
		margin-left: scaleUnit($this-space, 2)
	> .space-after
		margin-right: scaleUnit($this-space, 2)
	> .space-before-big
		margin-left: scaleUnit($this-space, 4)
	> .space-after-big
		margin-right: scaleUnit($this-space, 4)

@mixin space-equal-padding($padding)
	margin-top: calc( -#{$padding} / 2)
	margin-bottom: calc( -#{$padding} / 2)
	> *
		padding-top: calc( #{$padding} / 2)
		padding-bottom: calc( #{$padding} / 2)
@mixin space-equal-padding-horz($padding)
	margin-left: calc( -#{$padding} / 2)
	margin-right: calc( -#{$padding} / 2)
	> *
		padding-left: calc( #{$padding} / 2)
		padding-right: calc( #{$padding} / 2)

@mixin vert-padding-top
	padding-top: $unit1
@mixin vert-padding-bottom
	padding-bottom: $unit1
@mixin vert-padding
	@include vert-padding-top
	@include vert-padding-bottom
@mixin small-vert-padding-top
	padding-top: $unit-1
@mixin small-vert-padding-bottom
	padding-bottom: $unit-1
@mixin small-vert-padding
	@include small-vert-padding-top
	@include small-vert-padding-bottom
@mixin medium-vert-padding-top
	padding-top: $unit5
@mixin medium-vert-padding-bottom
	padding-bottom: $unit5
@mixin medium-vert-padding
	@include medium-vert-padding-top
	@include medium-vert-padding-bottom
@mixin big-vert-padding-top
	padding-top: $unit7
@mixin big-vert-padding-bottom
	padding-bottom: $unit7
@mixin big-vert-padding
	@include big-vert-padding-top
	@include big-vert-padding-bottom

@mixin horz-padding-left
	padding-left: 4em
@mixin horz-padding-right
	padding-right: 4em
@mixin horz-padding
	@include horz-padding-left
	@include horz-padding-right

// margins

@mixin space-items-wrap($spacing: $unit1)
	margin-top: calc( -#{$spacing} )
	> *
		margin-top: $spacing
		&:not(:last-child)
			margin-right: $spacing

@mixin vert-margin-top
	margin-top: $unit2
@mixin vert-margin-bottom
	margin-bottom: $unit2
@mixin vert-margin
	@include vert-margin-top
	@include vert-margin-bottom
@mixin small-vert-margin-top
	margin-top: $unit1
@mixin small-vert-margin-bottom
	margin-bottom: $unit1
@mixin small-vert-margin
	@include small-vert-margin-top
	@include small-vert-margin-bottom
@mixin medium-vert-margin-top
	margin-top: $unit3
@mixin medium-vert-margin-bottom
	margin-bottom: $unit3
@mixin medium-vert-margin
	@include medium-vert-margin-top
	@include medium-vert-margin-bottom
@mixin big-vert-margin-top
	margin-top: $unit4
@mixin big-vert-margin-bottom
	margin-bottom: $unit4
@mixin big-vert-margin
	@include big-vert-margin-top
	@include big-vert-margin-bottom

@mixin horz-margin-left
	margin-left: $unit2
@mixin horz-margin-right
	margin-right: $unit2
@mixin horz-margin
	@include horz-margin-left
	@include horz-margin-right
